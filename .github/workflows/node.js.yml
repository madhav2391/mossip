# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  build-test:

    runs-on: ubuntu-latest
    services:
      # How to use MySQL
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
        - 8888:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
    - uses: actions/checkout@v3
    #- uses: actions/setup-node@v3
    - name: List files in the repository
      run: |
          ls
    - name: pwd  the repository
      run: |
          pwd
    - name: cd to server
      run: |
          cd server
    - name: List files in the repository
      run: |
          ls
    - name: npm ci
      working-directory: ./server
      run: npm install

    - name: Verify MySQL connection from host
      run: |
        sudo apt-get install -y mysql-client libmysqlclient-dev
        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
        mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql    

    - name: mysql ping check
      run: mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -u root -proot -e 'CREATE DATABASE IF NOT EXISTS testgame;'
    - name: Run tests
      env:
        DB_PASSWORD: root
        DB_PORT: ${{ job.services.mysql.ports[3306] }} # get randomly assigned published port
        NODE_ENV: test
      working-directory: ./server
      run: npm test


  Docker-build:
    needs: build-test

    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file ./Dockerfile --tag madhavpasumarthy/memgame
   
    - name: Docker Login
      env: 
        Docker_Usr: ${{secrets.DOCKER_USER}}
        Docker_Pwd: ${{secrets.DOCKER_PWD}}
      run: docker login -u $Docker_Usr -p $Docker_Pwd

    - name: push the Docker image
      run: docker push ${{secrets.DOCKER_USER}}/memgame


  deploy:

    needs: Docker-build
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/ansible
      env:
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
